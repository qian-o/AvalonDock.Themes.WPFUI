<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:avalonDockControls="clr-namespace:AvalonDock.Controls;assembly=AvalonDock"
                    xmlns:avalonDockConverters="clr-namespace:AvalonDock.Converters;assembly=AvalonDock"
                    xmlns:avalonDockProperties="clr-namespace:AvalonDock.Properties;assembly=AvalonDock"
                    xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=AvalonDock"
                    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml">

    <Style TargetType="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}">
        <Setter Property="Background" Value="{DynamicResource WindowBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource AccentFillColorTertiaryBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}">
                    <AdornerDecorator>
                        <ui:ClientAreaBorder x:Name="WindowBorder"
                                             Background="{TemplateBinding Background}"
                                             BorderBrush="{TemplateBinding BorderBrush}"
                                             BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid Margin="8,4,8,4">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"
                                                   MinHeight="16" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid UseLayoutRounding="True">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <Border Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={avalonDockConverters:BoolToVisibilityConverter}}">
                                        <avalonDockControls:DropDownControlArea DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                                                DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                                            <ContentPresenter Content="{Binding Model.SinglePane.SelectedContent, RelativeSource={RelativeSource TemplatedParent}}"
                                                              ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                              ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
                                        </avalonDockControls:DropDownControlArea>
                                    </Border>

                                    <avalonDockControls:DropDownButton x:Name="SinglePaneContextMenu"
                                                                       Grid.Column="1"
                                                                       shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                                                       DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                                       DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
                                                                       Focusable="False"
                                                                       Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
                                                                       ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_CxMenu_Hint}"
                                                                       Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={avalonDockConverters:BoolToVisibilityConverter}}">
                                        <ui:SymbolIcon Filled="True"
                                                       Symbol="CaretDown12" />
                                    </avalonDockControls:DropDownButton>

                                    <Button Grid.Column="2"
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                            Focusable="False"
                                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                            ToolTip="{x:Static avalonDockProperties:Resources.Window_Maximize}"
                                            Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={avalonDockConverters:InverseBoolToVisibilityConverter}}">
                                        <ui:SymbolIcon Symbol="FullScreenMaximize16" />
                                    </Button>

                                    <Button Grid.Column="2"
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                            Focusable="False"
                                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                            ToolTip="{x:Static avalonDockProperties:Resources.Window_Restore}"
                                            Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={avalonDockConverters:BoolToVisibilityConverter}}">
                                        <ui:SymbolIcon Symbol="FullScreenMinimize16" />
                                    </Button>

                                    <Button x:Name="CloseButton"
                                            Grid.Column="3"
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Command="{Binding HideWindowCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                            Focusable="False"
                                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                            ToolTip="{x:Static avalonDockProperties:Resources.Document_Close}"
                                            Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}">
                                        <ui:SymbolIcon Symbol="Dismiss12" />
                                    </Button>
                                </Grid>
                                <ContentPresenter Grid.Row="1"
                                                  Content="{TemplateBinding Content}" />
                            </Grid>
                        </ui:ClientAreaBorder>
                    </AdornerDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="WindowBorder" Property="Padding" Value="3" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Model.SinglePane.SelectedContent.IsActive, RelativeSource={RelativeSource Self}}"
                                     Value="True">
                            <Setter TargetName="WindowBorder" Property="BorderBrush" Value="{DynamicResource AccentFillColorDefaultBrush}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.SinglePane.SelectedContent.CanClose, RelativeSource={RelativeSource Mode=Self}}"
                                     Value="True">
                            <Setter TargetName="CloseButton" Property="Command" Value="{Binding CloseWindowCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="CloseButton" Property="ToolTip" Value="{x:Static avalonDockProperties:Resources.Document_Close}" />

                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TextElement.Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
    </Style>

</ResourceDictionary>
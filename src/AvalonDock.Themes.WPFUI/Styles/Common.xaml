<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:avalonDockConverters="clr-namespace:AvalonDock.Converters;assembly=AvalonDock"
                    xmlns:avalonDockProperties="clr-namespace:AvalonDock.Properties;assembly=AvalonDock"
                    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml">

    <PathGeometry x:Key="Path_DockPaneLargeEmpty"
                  Figures="M 192,19.4161L 192,12.5843L 202.892,12.5843L 204.584,10.8924L 204.584,0.000223796L 211.416,0.000223796L 211.416,10.8924L 213.108,12.5843L 224,12.5843L 224,19.4161L 213.108,19.4161L 211.416,21.108L 211.416,32.0002L 204.584,32.0002L 204.584,21.108L 202.892,19.4161L 192,19.4161 Z " />

    <PathGeometry x:Key="Path_DockPaneEmpty"
                  Figures="M 266.388,0.000223796L 277.612,0.000223796L 277.612,7.60856L 280.392,10.3883L 288,10.3883L 288,21.6122L 280.392,21.6122L 277.612,24.3919L 277.612,32.0002L 266.388,32.0002L 266.388,24.3919L 263.608,21.6122L 256,21.6122L 256,10.3883L 263.608,10.3883L 266.388,7.60856L 266.388,0.000223796 Z " />

    <DataTemplate x:Key="DocumentHeaderTemplate">
        <TextBlock VerticalAlignment="Center"
                   Text="{Binding Title}"
                   TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="AnchorableHeaderTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Image x:Name="icon"
                   Source="{Binding IconSource, Converter={avalonDockConverters:NullToDoNothingConverter}}"
                   Stretch="Uniform" />
            <TextBlock x:Name="title"
                       Grid.Column="1"
                       Margin="4,0,0,0"
                       Text="{Binding Title}"
                       TextTrimming="CharacterEllipsis" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IconSource}"
                         Value="{x:Null}">
                <Setter TargetName="title" Property="Margin" Value="0" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="DocumentTitleTemplate">
        <ui:TextBlock VerticalAlignment="Center"
                      Text="{Binding Title}"
                      TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="AnchorableTitleTemplate">
        <ui:TextBlock VerticalAlignment="Center"
                      Text="{Binding Title}"
                      TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="IconContentTemplate">
        <Image Source="{Binding IconSource, Converter={avalonDockConverters:NullToDoNothingConverter}}"
               Stretch="Uniform" />
    </DataTemplate>

    <ContextMenu x:Key="AnchorableContextMenu">
        <MenuItem Command="{Binding Path=FloatCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Anchorable_Float}" />
        <MenuItem Command="{Binding Path=DockCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Anchorable_Dock}" />
        <MenuItem Command="{Binding Path=DockAsDocumentCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Anchorable_DockAsDocument}" />
        <MenuItem Command="{Binding Path=AutoHideCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Anchorable_AutoHide}" />
        <MenuItem Command="{Binding Path=CloseCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Document_Close}"
                  Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}" />
        <MenuItem Command="{Binding Path=HideCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Anchorable_Hide}">
            <MenuItem.Visibility>
                <MultiBinding Converter="{avalonDockConverters:AnchorableContextMenuHideVisibilityConverter}">
                    <Binding Converter="{avalonDockConverters:BoolToVisibilityConverter}"
                             Mode="OneWay"
                             Path="IsEnabled"
                             RelativeSource="{RelativeSource Self}" />
                    <Binding Path="CanClose" />
                </MultiBinding>
            </MenuItem.Visibility>
        </MenuItem>
    </ContextMenu>

    <ContextMenu x:Key="DocumentContextMenu">
        <MenuItem Command="{Binding Path=CloseCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Document_Close}"
                  Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}" />
        <MenuItem Command="{Binding Path=CloseAllButThisCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Document_CloseAllButThis}" />
        <MenuItem Command="{Binding Path=CloseAllCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Document_CloseAll}" />
        <MenuItem Command="{Binding Path=FloatCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Document_Float}" />
        <MenuItem Command="{Binding Path=DockAsDocumentCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Document_DockAsDocument}" />
        <MenuItem Command="{Binding Path=NewHorizontalTabGroupCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Document_NewHorizontalTabGroup}"
                  Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}" />
        <MenuItem Command="{Binding Path=NewVerticalTabGroupCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Document_NewVerticalTabGroup}"
                  Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}" />
        <MenuItem Command="{Binding Path=MoveToNextTabGroupCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Document_MoveToNextTabGroup}"
                  Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}" />
        <MenuItem Command="{Binding Path=MoveToPreviousTabGroupCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Document_MoveToPreviousTabGroup}"
                  Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}" />
    </ContextMenu>

</ResourceDictionary>
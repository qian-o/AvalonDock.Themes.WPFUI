<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:avalonDockControls="clr-namespace:AvalonDock.Controls;assembly=AvalonDock"
                    xmlns:converters="clr-namespace:AvalonDock.Themes.WPFUI.Converters">

    <Style TargetType="{x:Type avalonDockControls:LayoutAutoHideWindowControl}">
        <Setter Property="Background"
                Value="{DynamicResource WindowBackground}" />
        <Setter Property="AnchorableStyle">
            <Setter.Value>
                <Style TargetType="{x:Type avalonDockControls:LayoutAnchorableControl}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorableControl}">
                                <ui:ClientAreaBorder Background="{TemplateBinding Background}"
                                                     BorderBrush="{DynamicResource AccentFillColorDefaultBrush}"
                                                     BorderThickness="3"
                                                     TextElement.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                                                     KeyboardNavigation.TabNavigation="Cycle"
                                                     RenderTransform="{Binding Model, RelativeSource={RelativeSource TemplatedParent}, Converter={converters:ModelToTransformConverter}}">
                                    <Grid Margin="8,4,8,4">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <Border x:Name="Header">
                                            <avalonDockControls:AnchorablePaneTitle Model="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" />
                                        </Border>

                                        <ContentPresenter Grid.Row="1"
                                                          Content="{Binding LayoutItem.View, RelativeSource={RelativeSource TemplatedParent}}"
                                                          ContentTemplate="{Binding LayoutItem.View.ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                          ContentTemplateSelector="{Binding LayoutItem.View.ContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                                          FlowDirection="{TemplateBinding FlowDirection}" />
                                    </Grid>
                                </ui:ClientAreaBorder>
                                <ControlTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.IsFloating}"
                                                       Value="True" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.Parent.IsDirectlyHostedInFloatingWindow}"
                                                       Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="Header"
                                                Property="Visibility"
                                                Value="Collapsed" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model}"
                                                       Value="{x:Null}" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="Header"
                                                Property="Visibility"
                                                Value="Collapsed" />
                                    </MultiDataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>